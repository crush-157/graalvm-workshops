name: GraalVM Native Reflection Tutorial Pipeline
on: [push]
jobs:
  build-java:
    name: Build and Test Java Code
    runs-on:  ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build
        run: |
          cd native-image/reflection/demo/
          java ReflectionExample.java
      - name: Upload Class files
        uses: actions/upload-artifact@v2
        with:
          name: class-files
          path: native-image/reflection/demo/*.class
      - run: echo "üë∑‚Äç  Build status ${{ job.status }}."

  native:
    name: Build and Test Native Image
    needs: build-java
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        graalver: [21.3.0]
        javaver: [java11, java17]
        gu-binary: [gu]
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@5
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: ${matrix.graalver}
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: ${matrix.javaver}
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'
      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image
          native-image --no-fallback -H:ReflectionConfigurationResources=META-INF-WORKING/native-image/reflect-config.json ReflectionExample
