name: GraalVM Native Image Quick Start Pipeline
on: [push]
jobs:
  build-java:
    name: Build and Test Java Code
    runs-on:  ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: |
          cd native-image/graalvm-native-image-quick-start/demo/
          mvn --batch-mode --update-snapshots verify
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: jar-file
          path: native-image/graalvm-native-image-quick-start/demo/target/graalvmnidemos-1.0-SNAPSHOT-jar-with-dependencies.jar
      - run: echo "üë∑‚Äç  Build status ${{ job.status }}."

  native:
    name: Build and Test Native Image
    needs: build-java
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        graalver: [21.3.0]
        javaver: [java11, java17]
        gu-binary: [gu]
    steps:
      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: ${matrix.graalver}
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: ${matrix.javaver}
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'
      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image
          native-image -jar ./graalvmnidemos-1.0-SNAPSHOT-jar-with-dependencies.jar --no-fallback -H:Class=oracle.App -H:Name=file-count

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-java
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - A Test
          draft: false
          prerelease: false